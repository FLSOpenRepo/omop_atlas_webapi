/// 
Class User.concept Extends (%Persistent, Base) [ ClassType = persistent, DdlAllowed, Final, Owner = {overevkina}, ProcedureBlock, SqlRowIdPrivate, SqlTableName = concept ]
{

Property conceptid As %Library.Integer(MAXVAL = 2147483647, MINVAL = -2147483648) [ Required, SqlColumnNumber = 2, SqlFieldName = concept_id ];

Property conceptname As %Library.String(MAXLEN = 255) [ Required, SqlColumnNumber = 3, SqlFieldName = concept_name ];

Property domainid As %Library.String(MAXLEN = 20) [ Required, SqlColumnNumber = 4, SqlFieldName = domain_id ];

Property vocabularyid As %Library.String(MAXLEN = 20) [ Required, SqlColumnNumber = 5, SqlFieldName = vocabulary_id ];

Property conceptclassid As %Library.String(MAXLEN = 20) [ Required, SqlColumnNumber = 6, SqlFieldName = concept_class_id ];

Property standardconcept As %Library.String(MAXLEN = 1) [ SqlColumnNumber = 7, SqlFieldName = standard_concept ];

Property conceptcode As %Library.String(MAXLEN = 50) [ Required, SqlColumnNumber = 8, SqlFieldName = concept_code ];

Property validstartdate As %Library.Date [ Required, SqlColumnNumber = 9, SqlFieldName = valid_start_date ];

Property validenddate As %Library.Date [ Required, SqlColumnNumber = 10, SqlFieldName = valid_end_date ];

Property invalidreason As %Library.String(MAXLEN = 1) [ SqlColumnNumber = 11, SqlFieldName = invalid_reason ];

Parameter USEEXTENTSET = 1;

/// Bitmap Extent Index auto-generated by DDL CREATE TABLE statement.  Do not edit the SqlName of this index.
Index DDLBEIndex [ Extent, SqlName = "%%DDLBEIndex", Type = bitmap ];

Index conceptidIndx On conceptid;

ClassMethod InsertLine(fileLine As %String, delimiter As %Char = "	") As %Status [ Language = objectscript ]
{
	s:$p(fileLine,delimiter,8)?4N1"-"2N1"-"2N $p(fileLine,delimiter,8) = $zdh($p($p(fileLine,delimiter,8), " ", 1),3)
	s:$p(fileLine,delimiter,9)?4N1"-"2N1"-"2N $p(fileLine,delimiter,9) = $zdh($p($p(fileLine,delimiter,9), " ", 1),3)
	s:$p(fileLine,delimiter,8)?8N $p(fileLine,delimiter,8) = $zdh($p($p(fileLine,delimiter,8), " ", 1),5)
	s:$p(fileLine,delimiter,9)?8N $p(fileLine,delimiter,9) = $zdh($p($p(fileLine,delimiter,9), " ", 1),5)
	
	set obj = ..%New()
	
	set obj.conceptid = $p(fileLine,delimiter,1)
	set obj.conceptname = $p(fileLine,delimiter,2)
	set obj.domainid = $p(fileLine,delimiter,3)
	set obj.vocabularyid = $p(fileLine,delimiter,4)
	set obj.conceptclassid =$p(fileLine,delimiter,5)
	set obj.standardconcept = $p(fileLine,delimiter,6)
	set obj.conceptcode = $p(fileLine,delimiter,7)
	set obj.validstartdate = $p(fileLine,delimiter,8)
	set obj.validenddate = $p(fileLine,delimiter,9)
	set obj.invalidreason = $p(fileLine,delimiter,10)
	
	quit obj.%Save()
}

Storage Default
{
<Data name="conceptDefaultData">
<Value name="1">
<Value>conceptid</Value>
</Value>
<Value name="2">
<Value>conceptname</Value>
</Value>
<Value name="3">
<Value>domainid</Value>
</Value>
<Value name="4">
<Value>vocabularyid</Value>
</Value>
<Value name="5">
<Value>conceptclassid</Value>
</Value>
<Value name="6">
<Value>standardconcept</Value>
</Value>
<Value name="7">
<Value>conceptcode</Value>
</Value>
<Value name="8">
<Value>validstartdate</Value>
</Value>
<Value name="9">
<Value>validenddate</Value>
</Value>
<Value name="10">
<Value>invalidreason</Value>
</Value>
</Data>
<DataLocation>^poCN.EEbo.1</DataLocation>
<DefaultData>conceptDefaultData</DefaultData>
<ExtentLocation>^poCN.EEbo</ExtentLocation>
<IdLocation>^poCN.EEbo.1</IdLocation>
<Index name="DDLBEIndex">
<Location>^poCN.EEbo.2</Location>
</Index>
<Index name="IDKEY">
<Location>^poCN.EEbo.1</Location>
</Index>
<Index name="conceptidIndx">
<Location>^poCN.EEbo.3</Location>
</Index>
<IndexLocation>^poCN.EEbo.I</IndexLocation>
<StreamLocation>^poCN.EEbo.S</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}

